se = apply(boot.replicates$t, 2, sd, na.rm = TRUE),
low.CI = as.numeric(t(as.data.frame(CI)[1, ])),
upp.CI = as.numeric(t(as.data.frame(CI)[2, ])),
p = apply(boot.replicates$t, 2, function(x) ifelse(mean(x, na.rm = T)>0, length(x[x<0])/nsamples, length(x[x>0])/nsamples)))
}
# Suppress messages, warnings and errors for document aesthetics.
knitr::opts_chunk$set(message = FALSE, warning = FALSE, error = FALSE, echo = TRUE)
urban_boot.raw <-  boot.raw[[1]]
semiu_boot_raw <- boot.raw[[2]]
rur_boot_raw <- boot.raw[[3]]
idpop
semiu_boot_raw <- boot.raw[[3]]
rur_boot_raw <- boot.raw[[2]]
boot.grad
names(boot.grad) <- idpop
boot.grad
urban_boot_raw <-  boot.raw[[1]]
semiu_boot_raw <- boot.raw[[3]]
rur_boot_raw <- boot.raw[[2]]
mean(urban_boot_raw)
urban_boot_raw$t0
urban_boot_raw
head(urban_boot_raw$t)
urban_boot_raw$t0
beta_crop_urb <- urban_boot_raw$t[, 1]
beta_diam_urb <- urban_boot_raw$t[, 2]
beta_seeds_urb <- urban_boot_raw$t[, 3]
beta_peel_urb <- urban_boot_raw$t[, 4]
gamma_crop_urb <- urban_boot_raw$t[, 5]
gamma_diam_urb <- urban_boot_raw$t[, 6]
gamma_seeds_urb <- urban_boot_raw$t[, 7]
gamma_peel_urb <- urban_boot_raw$t[, 8]
gamma_crop.diam_urb <- urban_boot_raw$t[, 9]
gamma_crop.seeds_urb <- urban_boot_raw$t[, 10]
gamma_crop.peel_urb <- urban_boot_raw$t[, 11]
gamma_diam.seeds_urb <- urban_boot_raw$t[, 12]
gamma_diam.peel_urb <- urban_boot_raw$t[, 13]
gamma_seeds.peel_urb <- urban_boot_raw$t[, 14]
beta_crop_semiu <- semiurban_boot_raw$t[, 1]
beta_diam_semiu <- semiurban_boot_raw$t[, 2]
beta_seeds_semiu <- semiurban_boot_raw$t[, 3]
beta_peel_semiu <- semiurban_boot_raw$t[, 4]
gamma_crop_semiu <- semiurban_boot_raw$t[, 5]
gamma_diam_semiu <- semiurban_boot_raw$t[, 6]
gamma_seeds_semiu <- semiurban_boot_raw$t[, 7]
gamma_peel_semiu <- semiurban_boot_raw$t[, 8]
gamma_crop.diam_semiu <- semiurban_boot_raw$t[, 9]
gamma_crop.seeds_semiu <- semiurban_boot_raw$t[, 10]
gamma_crop.peel_semiu <- semiurban_boot_raw$t[, 11]
gamma_diam.seeds_semiu <- semiurban_boot_raw$t[, 12]
gamma_diam.peel_semiu <- semiurban_boot_raw$t[, 13]
gamma_seeds.peel_semiu <- semiurban_boot_raw$t[, 14]
beta_crop_semiu <- semiu_boot_raw$t[, 1]
beta_diam_semiu <- semiu_boot_raw$t[, 2]
beta_seeds_semiu <- semiu_boot_raw$t[, 3]
beta_peel_semiu <- semiu_boot_raw$t[, 4]
gamma_crop_semiu <- semiu_boot_raw$t[, 5]
gamma_diam_semiu <- semiu_boot_raw$t[, 6]
gamma_seeds_semiu <- semiu_boot_raw$t[, 7]
gamma_peel_semiu <- semiu_boot_raw$t[, 8]
gamma_crop.diam_semiu <- semiu_boot_raw$t[, 9]
gamma_crop.seeds_semiu <- semi_boot_raw$t[, 10]
gamma_crop.peel_semiu <- semiu_boot_raw$t[, 11]
gamma_diam.seeds_semiu <- semiu_boot_raw$t[, 12]
gamma_diam.peel_semiu <- semiu_boot_raw$t[, 13]
gamma_seeds.peel_semiu <- semiu_boot_raw$t[, 14]
gamma_crop.seeds_semiu <- semiu_boot_raw$t[, 10]
beta_crop_rur <- rural_boot_raw$t[, 1]
beta_diam_rur <- rural_boot_raw$t[, 2]
beta_seeds_rur <- rural_boot_raw$t[, 3]
beta_peel_rur <- rural_boot_raw$t[, 4]
gamma_crop_rur <- rural_boot_raw$t[, 5]
gamma_diam_rur <- rural_boot_raw$t[, 6]
gamma_seeds_rur <- rural_boot_raw$t[, 7]
gamma_peel_rur <- rural_boot_raw$t[, 8]
gamma_crop.diam_rur <- rural_boot_raw$t[, 9]
gamma_crop.seeds_rur <- rural_boot_raw$t[, 10]
gamma_crop.peel_rur <- rural_boot_raw$t[, 11]
gamma_diam.seeds_rur <- rural_boot_raw$t[, 12]
gamma_diam.peel_rur <- rural_boot_raw$t[, 13]
gamma_seeds.peel_rur <- rural_boot_raw$t[, 14]
beta_crop_rur <- rur_boot_raw$t[, 1]
beta_diam_rur <- rur_boot_raw$t[, 2]
beta_seeds_rur <- rur_boot_raw$t[, 3]
beta_peel_rur <- rur_boot_raw$t[, 4]
gamma_crop_rur <- rur_boot_raw$t[, 5]
gamma_diam_rur <- rur_boot_raw$t[, 6]
gamma_seeds_rur <- rur_boot_raw$t[, 7]
gamma_peel_rur <- rur_boot_raw$t[, 8]
gamma_crop.diam_rur <- rur_boot_raw$t[, 9]
gamma_crop.seeds_rur <- rur_boot_raw$t[, 10]
gamma_crop.peel_rur <- rur_boot_raw$t[, 11]
gamma_diam.seeds_rur <- rur_boot_raw$t[, 12]
gamma_diam.peel_rur <- rur_boot_raw$t[, 13]
gamma_seeds.peel_rur <- rur_boot_raw$t[, 14]
diff_beta_crop <- beta_crop_urb - beta_crop_semiu
diff_beta_crop <- beta_crop_urb - beta_crop_semiu
diff_beta_diam <- beta_diam_urb - beta_diam_semiu
diff_beta_seeds <- beta_seeds_urb - beta_seeds_semiu
diff_beta_peel <- beta_peel_urb - beta_peel_semiu
diff_gamma_crop <- gamma_crop_urb - gamma_crop_semiu
diff_gamma_diam <- gamma_diam_urb - gamma_diam_semiu
diff_gamma_seeds <- gamma_seeds_urb - gamma_seeds_semiu
diff_gamma_peel <- gamma_peel_urb - gamma_peel_semiu
diff_gamma_crop.diam <- gamma_crop.diam_urb - gamma_crop.diam_semiu
diff_gamma_crop.seeds <- gamma_crop.seeds_urb - gamma_crop.seeds_semiu
diff_gamma_crop.peel <- gamma_crop.peel_urb - gamma_crop.peel_semiu
diff_gamma_diam.seeds <- gamma_diam.seeds_urb - gamma_diam.seeds_semiu
diff_gamma_diam.peel <- gamma_diam.peel_urb - gamma_diam.peel_semiu
diff_gamma_seeds.peel <- gamma_seeds.peel_urb - gamma_seeds.peel_semiu
C_crop_urb <- gamma_crop_urb - beta_crop_urb^2
head(beta_crop_urb)
gamma_urb
beta_urb
beta_urb %*% t(beta_urb)
head(urban_boot_raw)
head(urban_boot_raw$t)
diff_C <- function(pop1, pop2, ntraits = 3){
nreplicates <- nrow(pop1)
diffC_pops <- list()
for(i in 1:nreplicates){
beta_pop1 <- pop1[i, 1:4]
beta_pop2 <- pop2[i, 1:4]
gamma_pop1 <- matrix(0, nrow = ntraits, ncol = ntraits)
gamma_pop2 <- matrix(0, nrow = ntraits, ncol = ntraits)
diag(gamma_pop1) <- pop1[i, 5:8]
diag(gamma_pop2) <- pop2[i, 5:8]
gamma_pop1[lower.tri(gamma_pop1)] <- pop1[i, 9:14]
gamma_pop1[upper.tri(gamma_pop1)] <- t(gamma_pop1)[upper.tri(t(gamma_pop1))]
gamma_pop2[lower.tri(gamma_pop2)] <- pop2[i, 9:14]
gamma_pop2[upper.tri(gamma_pop2)] <- t(gamma_pop2)[upper.tri(t(gamma_pop2))]
C_pop1 <- gamma_pop1 - beta_pop1 %*% t(beta_pop1)
C_pop2 <- gamma_pop2 - beta_pop2 %*% t(beta_pop2)
diffC_pops[[i]] <- C_pop1 - C_pop2
}
lapply(diffC_pops, mean)
}
a<-matrix(1:4,2,2)
a
unlist(a)
as.numeric(a)
a <- list(A = matrix(1:6, 2, 3),
B = matrix(2:7, 2, 3),
C = matrix(3:8, 2, 3))
Reduce("+", lapply(a, function (x) x > 2)
)
a
a
lapply(a, mean)
Reduce("mean", lapply(a, mean))
?Reduce
apply(simplify2array(a), c(1,2), mean)
a
apply(simplify2array(a), MARGIN=c(1,2), mean)
x<-rnorm(100)
quantile(x, probs = c(0.5))
quantile(x, probs = c(0.05,0.95))
apply(simplify2array(a), MARGIN = c(1, 2), quantile(x, probs = c(0.05,0.95))
)
apply(simplify2array(a), MARGIN = c(1, 2), function(x) quantile(x, probs = c(0.05,0.95)))
a
quantile(1:3,probs=c(0.05,0.95))
unlist(a)
a
do.call("rbind",a)
a
do.call("cbind",a)
apply(simplify2array(a), MARGIN = c(1, 2), function(x) quantile(x, probs = c(0.05, 0.95)))
a
apply(a, MARGIN = c(1, 2), function(x) quantile(x, probs = c(0.05, 0.95)))
simplify2array(a)
lapply(a, c(1,2),mean)
lapply(a,mean)
apply(simplify2array(a), MARGIN = c(1, 2), mean)
a
a[[1]][2,3]
sapply(a, function(x) x[1, 1])
diff_ciC <- matrix(NA, nrow = 3, ncol = 6)
for(i in 1:2){
for(j in 1:3){
diff_ciC <- sapply(a, function(x) x[i, j])
}
}
diff_ciC
diff_ciC <- matrix(NA, nrow = 3, ncol = 6)
diff_ciC
diff_ciC <- list()
for(i in 1:2){
for(j in 1:3){
diff_ciC[[i]] <- sapply(a, function(x) x[i, j])
}
}
diff_ciC
diff_ciC <- list()
for(i in 1:2){
for(j in 1:3){
for(k in 1:6){
diff_ciC[[k]] <- sapply(a, function(x) x[i, j])
}}
}
diff_ciC
a
unlist(a)
lapply(a,unlist)
do.call("rbind",a)
a
a
sapply(a, function(x) x[1, 2])
gamma
gamma_semiu
quantile(sapply(a, function(x) x[1, 1]), probs = c(0.05, 0.95))
diff_C <- function(pop1, pop2, ntraits = 3){
nreplicates <- nrow(pop1)
diffC_pops <- list()
for(i in 1:nreplicates){
beta_pop1 <- pop1[i, 1:4]
beta_pop2 <- pop2[i, 1:4]
gamma_pop1 <- matrix(0, nrow = ntraits, ncol = ntraits)
gamma_pop2 <- matrix(0, nrow = ntraits, ncol = ntraits)
diag(gamma_pop1) <- pop1[i, 5:8]
diag(gamma_pop2) <- pop2[i, 5:8]
gamma_pop1[lower.tri(gamma_pop1)] <- pop1[i, 9:14]
gamma_pop1[upper.tri(gamma_pop1)] <- t(gamma_pop1)[upper.tri(t(gamma_pop1))]
gamma_pop2[lower.tri(gamma_pop2)] <- pop2[i, 9:14]
gamma_pop2[upper.tri(gamma_pop2)] <- t(gamma_pop2)[upper.tri(t(gamma_pop2))]
C_pop1 <- gamma_pop1 - beta_pop1 %*% t(beta_pop1)
C_pop2 <- gamma_pop2 - beta_pop2 %*% t(beta_pop2)
diffC_pops[[i]] <- C_pop1 - C_pop2
}
diff_meanC <- apply(simplify2array(diffC_pops), MARGIN = c(1, 2), mean)
diff_ciC <- as.data.frame(matrix(NA, nrow = 2, ncol = 10))
diff_ciC[,1] <- quantile(sapply(diffC_pops, function(x) x[1, 1]), probs = c(0.05, 0.95))
diff_ciC[,2] <- quantile(sapply(diffC_pops, function(x) x[2, 2]), probs = c(0.05, 0.95))
diff_ciC[,3] <- quantile(sapply(diffC_pops, function(x) x[3, 3]), probs = c(0.05, 0.95))
diff_ciC[,4] <- quantile(sapply(diffC_pops, function(x) x[4, 4]), probs = c(0.05, 0.95))
diff_ciC[,5] <- quantile(sapply(diffC_pops, function(x) x[2, 1]), probs = c(0.05, 0.95))
diff_ciC[,6] <- quantile(sapply(diffC_pops, function(x) x[3, 1]), probs = c(0.05, 0.95))
diff_ciC[,7] <- quantile(sapply(diffC_pops, function(x) x[4, 1]), probs = c(0.05, 0.95))
diff_ciC[,8] <- quantile(sapply(diffC_pops, function(x) x[3, 2]), probs = c(0.05, 0.95))
diff_ciC[,9] <- quantile(sapply(diffC_pops, function(x) x[4, 2]), probs = c(0.05, 0.95))
diff_ciC[,10] <- quantile(sapply(diffC_pops, function(x) x[4, 3]), probs = c(0.05, 0.95))
colnames(diff_meanC) <- c("crop", "diam", "seeds", "peel", "cropxdiam", "cropxseeds", "cropxpeel", "diamxseeds", "diamxpeel", "seedsxpeel")
}
C_urban_semiurban <- diff_C(urban_boot_raw$t, semiu_boot_raw$t, ntraits = 4)
diff_C <- function(pop1, pop2, ntraits = 3){
nreplicates <- nrow(pop1)
diffC_pops <- list()
for(i in 1:nreplicates){
beta_pop1 <- pop1[i, 1:4]
beta_pop2 <- pop2[i, 1:4]
gamma_pop1 <- matrix(0, nrow = ntraits, ncol = ntraits)
gamma_pop2 <- matrix(0, nrow = ntraits, ncol = ntraits)
diag(gamma_pop1) <- pop1[i, 5:8]
diag(gamma_pop2) <- pop2[i, 5:8]
gamma_pop1[lower.tri(gamma_pop1)] <- pop1[i, 9:14]
gamma_pop1[upper.tri(gamma_pop1)] <- t(gamma_pop1)[upper.tri(t(gamma_pop1))]
gamma_pop2[lower.tri(gamma_pop2)] <- pop2[i, 9:14]
gamma_pop2[upper.tri(gamma_pop2)] <- t(gamma_pop2)[upper.tri(t(gamma_pop2))]
C_pop1 <- gamma_pop1 - beta_pop1 %*% t(beta_pop1)
C_pop2 <- gamma_pop2 - beta_pop2 %*% t(beta_pop2)
diffC_pops[[i]] <- C_pop1 - C_pop2
}
}
C_urban_semiurban <- diff_C(urban_boot_raw$t, semiu_boot_raw$t, ntraits = 4)
pop1<-urban_boot_raw$t
pop2<-semiu_boot_raw$t
beta_pop1 <- pop1[5, 1:4]
beta_pop2 <- pop2[5, 1:4]
beta_pop1
gamma_pop1 <- matrix(0, nrow = ntraits, ncol = ntraits)
gamma_pop2 <- matrix(0, nrow = ntraits, ncol = ntraits)
diag(gamma_pop1) <- pop1[5, 5:8]
diag(gamma_pop2) <- pop2[5, 5:8]
gamma_pop1[lower.tri(gamma_pop1)] <- pop1[5, 9:14]
gamma_pop1[upper.tri(gamma_pop1)] <- t(gamma_pop1)[upper.tri(t(gamma_pop1))]
gamma_pop2[lower.tri(gamma_pop2)] <- pop2[5, 9:14]
gamma_pop2[upper.tri(gamma_pop2)] <- t(gamma_pop2)[upper.tri(t(gamma_pop2))]
gamma_pop1
gamma_pop2
C_pop1 <- gamma_pop1 - beta_pop1 %*% t(beta_pop1)
C_pop2 <- gamma_pop2 - beta_pop2 %*% t(beta_pop2)
C_pop1
C_pop1 - C_pop2
diff_meanC <- apply(simplify2array(diffC_pops), MARGIN = c(1, 2), mean)
diffC_pops <- C_pop1 - C_pop2
diff_meanC <- apply(simplify2array(diffC_pops), MARGIN = c(1, 2), mean)
diff_meanC
diff_ciC <- as.data.frame(matrix(NA, nrow = 2, ncol = 10))
diff_ciC[,1] <- quantile(sapply(diffC_pops, function(x) x[1, 1]), probs = c(0.05, 0.95))
diff_ciC
diffC_pops
diff_C <- function(pop1, pop2, ntraits = 3){
nreplicates <- nrow(pop1)
diffC_pops <- list()
for(i in 1:nreplicates){
beta_pop1 <- pop1[i, 1:4]
beta_pop2 <- pop2[i, 1:4]
gamma_pop1 <- matrix(0, nrow = ntraits, ncol = ntraits)
gamma_pop2 <- matrix(0, nrow = ntraits, ncol = ntraits)
diag(gamma_pop1) <- pop1[i, 5:8]
diag(gamma_pop2) <- pop2[i, 5:8]
gamma_pop1[lower.tri(gamma_pop1)] <- pop1[i, 9:14]
gamma_pop1[upper.tri(gamma_pop1)] <- t(gamma_pop1)[upper.tri(t(gamma_pop1))]
gamma_pop2[lower.tri(gamma_pop2)] <- pop2[i, 9:14]
gamma_pop2[upper.tri(gamma_pop2)] <- t(gamma_pop2)[upper.tri(t(gamma_pop2))]
C_pop1 <- gamma_pop1 - beta_pop1 %*% t(beta_pop1)
C_pop2 <- gamma_pop2 - beta_pop2 %*% t(beta_pop2)
diffC_pops[[i]] <- C_pop1 - C_pop2
diffC_pops
}
}
C_urban_semiurban <- diff_C(urban_boot_raw$t, semiu_boot_raw$t, ntraits = 4)
C_urban_semiurban
urban_boot_raw$t
semiu_boot_raw$t
diff_C <- function(pop1, pop2, ntraits = 3){
nreplicates <- nrow(pop1)
diffC_pops <- list()
for(i in 1:nreplicates){
beta_pop1 <- pop1[i, 1:4]
beta_pop2 <- pop2[i, 1:4]
gamma_pop1 <- matrix(0, nrow = ntraits, ncol = ntraits)
gamma_pop2 <- matrix(0, nrow = ntraits, ncol = ntraits)
diag(gamma_pop1) <- pop1[i, 5:8]
diag(gamma_pop2) <- pop2[i, 5:8]
gamma_pop1[lower.tri(gamma_pop1)] <- pop1[i, 9:14]
gamma_pop1[upper.tri(gamma_pop1)] <- t(gamma_pop1)[upper.tri(t(gamma_pop1))]
gamma_pop2[lower.tri(gamma_pop2)] <- pop2[i, 9:14]
gamma_pop2[upper.tri(gamma_pop2)] <- t(gamma_pop2)[upper.tri(t(gamma_pop2))]
C_pop1 <- gamma_pop1 - beta_pop1 %*% t(beta_pop1)
C_pop2 <- gamma_pop2 - beta_pop2 %*% t(beta_pop2)
diffC_pops[[i]] <- C_pop1 - C_pop2
}
diffC_pops
}
C_urban_semiurban <- diff_C(urban_boot_raw$t, semiu_boot_raw$t, ntraits = 4)
C_urban_semiurban
diff_meanC <- apply(simplify2array(diffC_pops), MARGIN = c(1, 2), mean)
diff_meanC
diff_ciC <- as.data.frame(matrix(NA, nrow = 2, ncol = 10))
diff_ciC[,1] <- quantile(sapply(diffC_pops, function(x) x[1, 1]), probs = c(0.05, 0.95))
quantile(sapply(diffC_pops, function(x) x[1, 1]), probs = c(0.05, 0.95))
diffC_pops[[1]]
diff_C <- function(pop1, pop2, ntraits = 3){
nreplicates <- nrow(pop1)
diffC_pops <- list()
for(i in 1:nreplicates){
beta_pop1 <- pop1[i, 1:4]
beta_pop2 <- pop2[i, 1:4]
gamma_pop1 <- matrix(0, nrow = ntraits, ncol = ntraits)
gamma_pop2 <- matrix(0, nrow = ntraits, ncol = ntraits)
diag(gamma_pop1) <- pop1[i, 5:8]
diag(gamma_pop2) <- pop2[i, 5:8]
gamma_pop1[lower.tri(gamma_pop1)] <- pop1[i, 9:14]
gamma_pop1[upper.tri(gamma_pop1)] <- t(gamma_pop1)[upper.tri(t(gamma_pop1))]
gamma_pop2[lower.tri(gamma_pop2)] <- pop2[i, 9:14]
gamma_pop2[upper.tri(gamma_pop2)] <- t(gamma_pop2)[upper.tri(t(gamma_pop2))]
C_pop1 <- gamma_pop1 - beta_pop1 %*% t(beta_pop1)
C_pop2 <- gamma_pop2 - beta_pop2 %*% t(beta_pop2)
diffC_pops[[i]] <- C_pop1 - C_pop2
}
diffC_pops}
C_urban_semiurban <- diff_C(urban_boot_raw$t, semiu_boot_raw$t, ntraits = 4)
quantile(sapply(C_urban_semiurban, function(x) x[1, 1]), probs = c(0.05, 0.95))
diff_ciC[,1] <- quantile(sapply(C_urban_semiurban, function(x) x[1, 1]), probs = c(0.05, 0.95))
diff_ciC[,1]
diff_C <- function(pop1, pop2, ntraits = 3){
nreplicates <- nrow(pop1)
diffC_pops <- list()
for(i in 1:nreplicates){
beta_pop1 <- pop1[i, 1:4]
beta_pop2 <- pop2[i, 1:4]
gamma_pop1 <- matrix(0, nrow = ntraits, ncol = ntraits)
gamma_pop2 <- matrix(0, nrow = ntraits, ncol = ntraits)
diag(gamma_pop1) <- pop1[i, 5:8]
diag(gamma_pop2) <- pop2[i, 5:8]
gamma_pop1[lower.tri(gamma_pop1)] <- pop1[i, 9:14]
gamma_pop1[upper.tri(gamma_pop1)] <- t(gamma_pop1)[upper.tri(t(gamma_pop1))]
gamma_pop2[lower.tri(gamma_pop2)] <- pop2[i, 9:14]
gamma_pop2[upper.tri(gamma_pop2)] <- t(gamma_pop2)[upper.tri(t(gamma_pop2))]
C_pop1 <- gamma_pop1 - beta_pop1 %*% t(beta_pop1)
C_pop2 <- gamma_pop2 - beta_pop2 %*% t(beta_pop2)
diffC_pops[[i]] <- C_pop1 - C_pop2
}
diff_meanC <- apply(simplify2array(diffC_pops), MARGIN = c(1, 2), mean)
diff_ciC <- as.data.frame(matrix(NA, nrow = 2, ncol = 10))
diff_ciC[,1] <- quantile(sapply(diffC_pops, function(x) x[1, 1]), probs = c(0.05, 0.95))
diff_ciC[,2] <- quantile(sapply(diffC_pops, function(x) x[2, 2]), probs = c(0.05, 0.95))
diff_ciC[,3] <- quantile(sapply(diffC_pops, function(x) x[3, 3]), probs = c(0.05, 0.95))
diff_ciC[,4] <- quantile(sapply(diffC_pops, function(x) x[4, 4]), probs = c(0.05, 0.95))
diff_ciC[,5] <- quantile(sapply(diffC_pops, function(x) x[2, 1]), probs = c(0.05, 0.95))
diff_ciC[,6] <- quantile(sapply(diffC_pops, function(x) x[3, 1]), probs = c(0.05, 0.95))
diff_ciC[,7] <- quantile(sapply(diffC_pops, function(x) x[4, 1]), probs = c(0.05, 0.95))
diff_ciC[,8] <- quantile(sapply(diffC_pops, function(x) x[3, 2]), probs = c(0.05, 0.95))
diff_ciC[,9] <- quantile(sapply(diffC_pops, function(x) x[4, 2]), probs = c(0.05, 0.95))
diff_ciC[,10] <- quantile(sapply(diffC_pops, function(x) x[4, 3]), probs = c(0.05, 0.95))
colnames(diff_meanC) <- c("crop", "diam", "seeds", "peel", "cropxdiam", "cropxseeds", "cropxpeel", "diamxseeds", "diamxpeel", "seedsxpeel")
list(diff_meanC, diff_ciC)
}
C_urban_semiurban <- diff_C(urban_boot_raw$t, semiu_boot_raw$t, ntraits = 4)
diff_C <- function(pop1, pop2, ntraits = 3){
nreplicates <- nrow(pop1)
diffC_pops <- list()
for(i in 1:nreplicates){
beta_pop1 <- pop1[i, 1:4]
beta_pop2 <- pop2[i, 1:4]
gamma_pop1 <- matrix(0, nrow = ntraits, ncol = ntraits)
gamma_pop2 <- matrix(0, nrow = ntraits, ncol = ntraits)
diag(gamma_pop1) <- pop1[i, 5:8]
diag(gamma_pop2) <- pop2[i, 5:8]
gamma_pop1[lower.tri(gamma_pop1)] <- pop1[i, 9:14]
gamma_pop1[upper.tri(gamma_pop1)] <- t(gamma_pop1)[upper.tri(t(gamma_pop1))]
gamma_pop2[lower.tri(gamma_pop2)] <- pop2[i, 9:14]
gamma_pop2[upper.tri(gamma_pop2)] <- t(gamma_pop2)[upper.tri(t(gamma_pop2))]
C_pop1 <- gamma_pop1 - beta_pop1 %*% t(beta_pop1)
C_pop2 <- gamma_pop2 - beta_pop2 %*% t(beta_pop2)
diffC_pops[[i]] <- C_pop1 - C_pop2
}
diff_meanC <- apply(simplify2array(diffC_pops), MARGIN = c(1, 2), mean)
diff_ciC <- as.data.frame(matrix(NA, nrow = 2, ncol = 10))
diff_ciC[,1] <- quantile(sapply(diffC_pops, function(x) x[1, 1]), probs = c(0.05, 0.95))
diff_ciC[,2] <- quantile(sapply(diffC_pops, function(x) x[2, 2]), probs = c(0.05, 0.95))
diff_ciC[,3] <- quantile(sapply(diffC_pops, function(x) x[3, 3]), probs = c(0.05, 0.95))
diff_ciC[,4] <- quantile(sapply(diffC_pops, function(x) x[4, 4]), probs = c(0.05, 0.95))
diff_ciC[,5] <- quantile(sapply(diffC_pops, function(x) x[2, 1]), probs = c(0.05, 0.95))
diff_ciC[,6] <- quantile(sapply(diffC_pops, function(x) x[3, 1]), probs = c(0.05, 0.95))
diff_ciC[,7] <- quantile(sapply(diffC_pops, function(x) x[4, 1]), probs = c(0.05, 0.95))
diff_ciC[,8] <- quantile(sapply(diffC_pops, function(x) x[3, 2]), probs = c(0.05, 0.95))
diff_ciC[,9] <- quantile(sapply(diffC_pops, function(x) x[4, 2]), probs = c(0.05, 0.95))
diff_ciC[,10] <- quantile(sapply(diffC_pops, function(x) x[4, 3]), probs = c(0.05, 0.95))
#colnames(diff_meanC) <- c("crop", "diam", "seeds", "peel", "cropxdiam", "cropxseeds", "cropxpeel", "diamxseeds", "diamxpeel", "seedsxpeel")
list(diff_meanC, diff_ciC)
}
C_urban_semiurban <- diff_C(urban_boot_raw$t, semiu_boot_raw$t, ntraits = 4)
diff_C <- function(pop1, pop2, ntraits = 3){
nreplicates <- nrow(pop1)
diffC_pops <- list()
for(i in 1:nreplicates){
beta_pop1 <- pop1[i, 1:4]
beta_pop2 <- pop2[i, 1:4]
gamma_pop1 <- matrix(0, nrow = ntraits, ncol = ntraits)
gamma_pop2 <- matrix(0, nrow = ntraits, ncol = ntraits)
diag(gamma_pop1) <- pop1[i, 5:8]
diag(gamma_pop2) <- pop2[i, 5:8]
gamma_pop1[lower.tri(gamma_pop1)] <- pop1[i, 9:14]
gamma_pop1[upper.tri(gamma_pop1)] <- t(gamma_pop1)[upper.tri(t(gamma_pop1))]
gamma_pop2[lower.tri(gamma_pop2)] <- pop2[i, 9:14]
gamma_pop2[upper.tri(gamma_pop2)] <- t(gamma_pop2)[upper.tri(t(gamma_pop2))]
C_pop1 <- gamma_pop1 - beta_pop1 %*% t(beta_pop1)
C_pop2 <- gamma_pop2 - beta_pop2 %*% t(beta_pop2)
diffC_pops[[i]] <- C_pop1 - C_pop2
}
diff_meanC <- apply(simplify2array(diffC_pops), MARGIN = c(1, 2), mean)
diff_ciC <- as.data.frame(matrix(NA, nrow = 2, ncol = 10))
diff_ciC[,1] <- quantile(sapply(diffC_pops, function(x) x[1, 1]), probs = c(0.05, 0.95))
diff_ciC[,2] <- quantile(sapply(diffC_pops, function(x) x[2, 2]), probs = c(0.05, 0.95))
diff_ciC[,3] <- quantile(sapply(diffC_pops, function(x) x[3, 3]), probs = c(0.05, 0.95))
diff_ciC[,4] <- quantile(sapply(diffC_pops, function(x) x[4, 4]), probs = c(0.05, 0.95))
diff_ciC[,5] <- quantile(sapply(diffC_pops, function(x) x[2, 1]), probs = c(0.05, 0.95))
diff_ciC[,6] <- quantile(sapply(diffC_pops, function(x) x[3, 1]), probs = c(0.05, 0.95))
diff_ciC[,7] <- quantile(sapply(diffC_pops, function(x) x[4, 1]), probs = c(0.05, 0.95))
diff_ciC[,8] <- quantile(sapply(diffC_pops, function(x) x[3, 2]), probs = c(0.05, 0.95))
diff_ciC[,9] <- quantile(sapply(diffC_pops, function(x) x[4, 2]), probs = c(0.05, 0.95))
diff_ciC[,10] <- quantile(sapply(diffC_pops, function(x) x[4, 3]), probs = c(0.05, 0.95))
colnames(diff_ciC) <- c("crop", "diam", "seeds", "peel", "cropxdiam", "cropxseeds", "cropxpeel", "diamxseeds", "diamxpeel", "seedsxpeel")
list(diff_meanC, diff_ciC)
}
C_urban_semiurban <- diff_C(urban_boot_raw$t, semiu_boot_raw$t, ntraits = 4)
C_urban_semiurban
C_semiurban_rural <- diff_C(semiu_boot_raw$t, rur_boot_raw$t, ntraits = 4)
C_urban_rural <- diff_C(urban_boot_raw$t, rur_boot_raw$t, ntraits = 4)
C_urban_semiurban <- diff_C(urban_boot_raw$t, semiu_boot_raw$t, ntraits = 4)
diff_C <- function(pop1, pop2, ntraits = 3){
nreplicates <- nrow(pop1)
diffC_pops <- list()
for(i in 1:nreplicates){
beta_pop1 <- pop1[i, 1:4]
beta_pop2 <- pop2[i, 1:4]
gamma_pop1 <- matrix(0, nrow = ntraits, ncol = ntraits)
gamma_pop2 <- matrix(0, nrow = ntraits, ncol = ntraits)
diag(gamma_pop1) <- pop1[i, 5:8]
diag(gamma_pop2) <- pop2[i, 5:8]
gamma_pop1[lower.tri(gamma_pop1)] <- pop1[i, 9:14]
gamma_pop1[upper.tri(gamma_pop1)] <- t(gamma_pop1)[upper.tri(t(gamma_pop1))]
gamma_pop2[lower.tri(gamma_pop2)] <- pop2[i, 9:14]
gamma_pop2[upper.tri(gamma_pop2)] <- t(gamma_pop2)[upper.tri(t(gamma_pop2))]
C_pop1 <- gamma_pop1 - beta_pop1 %*% t(beta_pop1)
C_pop2 <- gamma_pop2 - beta_pop2 %*% t(beta_pop2)
diffC_pops[[i]] <- C_pop1 - C_pop2
}
diff_meanC <- apply(simplify2array(diffC_pops), MARGIN = c(1, 2), mean)
diff_ciC <- as.data.frame(matrix(NA, nrow = 2, ncol = 10))
diff_ciC[,1] <- quantile(sapply(diffC_pops, function(x) x[1, 1]),probs = c(0.05, 0.95), na.rm=T)
diff_ciC[,2] <- quantile(sapply(diffC_pops, function(x) x[2, 2]), probs = c(0.05, 0.95), na.rm=T)
diff_ciC[,3] <- quantile(sapply(diffC_pops, function(x) x[3, 3]), probs = c(0.05, 0.95), na.rm=T)
diff_ciC[,4] <- quantile(sapply(diffC_pops, function(x) x[4, 4]), probs = c(0.05, 0.95), na.rm=T)
diff_ciC[,5] <- quantile(sapply(diffC_pops, function(x) x[2, 1]), probs = c(0.05, 0.95), na.rm=T)
diff_ciC[,6] <- quantile(sapply(diffC_pops, function(x) x[3, 1]), probs = c(0.05, 0.95), na.rm=T)
diff_ciC[,7] <- quantile(sapply(diffC_pops, function(x) x[4, 1]), probs = c(0.05, 0.95), na.rm=T)
diff_ciC[,8] <- quantile(sapply(diffC_pops, function(x) x[3, 2]), probs = c(0.05, 0.95), na.rm=T)
diff_ciC[,9] <- quantile(sapply(diffC_pops, function(x) x[4, 2]), probs = c(0.05, 0.95), na.rm=T)
diff_ciC[,10] <- quantile(sapply(diffC_pops, function(x) x[4, 3]), probs = c(0.05, 0.95), na.rm=T)
colnames(diff_ciC) <- c("crop", "diam", "seeds", "peel", "cropxdiam", "cropxseeds", "cropxpeel", "diamxseeds", "diamxpeel", "seedsxpeel")
list(diff_meanC, diff_ciC)
}
C_semiurban_rural <- diff_C(semiu_boot_raw$t, rur_boot_raw$t, ntraits = 4)
C_urban_rural <- diff_C(urban_boot_raw$t, rur_boot_raw$t, ntraits = 4)
C_semiurban_rural
C_urban_rural
c(pnorm(2*pnorm(0.4) - 1.96), pnorm(2*pnorm(0.4) + 1.96))
diffC_pops
diff_meanC
